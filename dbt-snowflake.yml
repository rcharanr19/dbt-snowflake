name: Deploy DBT Project to Snowflake

on:
  push:
    branches:
      - main

jobs:
  deploy-dbt-project:
    runs-on: ubuntu-latest
    env:
      DBT_PROJECT_NAME: dbt_analytics_cloudlink
      DBT_HOLTCAT_ANALYTICS_DB_NAME: ${{ secrets.DBT_HOLTCAT_ANALYTICS_DB_NAME }}
      DBT_CLOUDLINK_RAW_DB_NAME: ${{ secrets.DBT_CLOUDLINK_RAW_DB_NAME }}
      DBT_DBS_RAW_DB_NAME: ${{ secrets.DBT_DBS_RAW_DB_NAME }}
      DBT_SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      DBT_SNOWFLAKE_USER: ${{ secrets.APP_DATA_TRANSFORM_USER }}
      DBT_SNOWFLAKE_ROLE: ${{ secrets.APP_DATA_TRANSFORM_USER_ROLE }}
      DBT_SNOWFLAKE_DATABASE: ${{ secrets.SF_ANALYTICS_CLOUDLINK_DATABASE }}
      DBT_SNOWFLAKE_WAREHOUSE: ${{ secrets.APP_DATA_TRANSFORM_USER_WAREHOUSE }}
      DBT_SNOWFLAKE_SCHEMA: ${{ secrets.SF_ANALYTICS_CLOUDLINK_DBT_SCHEMA }}
      DBT_SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY_PASSPHRASE }}
      SF_ANALYTICS_CLOUDLINK_DBT_PROJECT_SCHEMA: ${{ secrets.SF_ANALYTICS_CLOUDLINK_DBT_PROJECT_SCHEMA }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-cli==3.9.0 dbt-snowflake==1.10.*
          dbt deps
          snow --version

      - name: Write SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY to file
        run: |
          echo "${{ secrets.SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY }}" > SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY.p8

      - name: Package dbt project as zip
        run: |
          zip -r $DBT_PROJECT_NAME.zip . -x '*.git*' '*.venv*' '*.tox*' '*.pytest_cache*' 'target/*' 'logs/*'

      - name: Decrypt SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY (PKCS#8)
        run: |
          openssl pkcs8 -inform PEM -in SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY.p8 \
            -out decrypted_rsa_key.p8 -outform PEM -passin pass:"${{ secrets.SF_DBT_TRANSFORM_USERNAME_RSA_PRIVATE_KEY_PASSPHRASE }}"

      - name: Deploy dbt project object
        run: |
          export SNOWFLAKE_CLI_FEATURES_ENABLE_DBT=true
          snow dbt deploy $DBT_PROJECT_NAME \
            --source . \
            --profiles-dir . \
            --database "${{ secrets.SF_ANALYTICS_CLOUDLINK_DATABASE }}" \
            --schema "${{ secrets.SF_ANALYTICS_CLOUDLINK_DBT_PROJECT_SCHEMA }}" \
            --role "${{ secrets.APP_DATA_TRANSFORM_USER_ROLE }}" \
            --warehouse "${{ secrets.APP_DATA_TRANSFORM_USER_WAREHOUSE }}" \
            --account "${{ secrets.SF_ACCOUNT }}" \
            --user "${{ secrets.APP_DATA_TRANSFORM_USER }}" \
            --authenticator SNOWFLAKE_JWT \
            --private-key-path "decrypted_rsa_key.p8" \
            -x

      - name: Granting access to dbt project using snow sql (key pair auth)
        run: |
          snow sql -q "GRANT USAGE ON DBT PROJECT $DBT_PROJECT_NAME TO ROLE AZ_GRP_SF_DEVELOPER_ROLE;" \
            --database "${{ secrets.SF_ANALYTICS_CLOUDLINK_DATABASE }}" \
            --schema "${{ secrets.SF_ANALYTICS_CLOUDLINK_DBT_PROJECT_SCHEMA }}" \
            --role "${{ secrets.APP_DATA_TRANSFORM_USER_ROLE }}" \
            --warehouse "${{ secrets.APP_DATA_TRANSFORM_USER_WAREHOUSE }}" \
            --account "${{ secrets.SF_ACCOUNT }}" \
            --user "${{ secrets.APP_DATA_TRANSFORM_USER }}" \
            --authenticator SNOWFLAKE_JWT \
            --private-key-path "decrypted_rsa_key.p8" \
            -x

      - name: Upload dbt project zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dbt_project_zip
          path: ${{ env.DBT_PROJECT_NAME }}.zip